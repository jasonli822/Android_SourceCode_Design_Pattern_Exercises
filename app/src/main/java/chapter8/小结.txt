第8章 随遇而安--状态模式

状态模式介绍
    状态模式中的行为是由状态来决定的，不同的状态下有不同的行为。状态模式和策略模式的结构几乎完全一样，但它们的目的、
    本质却完全不一样。状态模式的行为是平行的、不可替换的，策略模式的行为是彼此独立、可相互替换的。用一句话来表述，
    状态模式把对象的行为包装在不同的状态对象里，每一个状态对象都有一个共同的抽象状态基类。状态模式的意图是让一个对象
    在其内部状态改变的时候，其行为也随之改变。

状态模式的定义
    当一个对象的内在状态改变时允许改变其行为，这个对象看起来像是改变了其类。



示例代码说明：
    示例代码中，我们抽象了一个TvState接口，该接口中有操作电视的所有函数，该接口有两个实现类，即开机状态(PowerOnState)
    和关机状态(PowerOffState)。开机状态下只有开机功能是无效的，也就是说在已经开机的时候用户再按下开机键不会产生任何反应；
    而在关机状态下，只有开机功能是可用的，其他功能不会生效。同一个操作，如调高音量的turnUp函数，在关机状态下无效，在开机
    状态下就会将电视的音量调高，也就是说电视的内部状态影响了电视遥控器的行为。
    状态模式将这些行为封装到状态类中，在进行操作时将这些功能转发给状态对象，不同的状态有不同的实现，这样就通过多态的形式去除了
    重复、杂乱的if-else语句，这也正是状态模式的精髓所在。