第24章 连接两地的交通枢纽--桥接模式

桥接模式介绍
    桥接模式(Bridge Pattern)也称为桥梁模式，是结构型设计模式之一。在现实生活中大家都知道“桥梁”是连接河道两岸的
主要交通枢纽，简而言之其作用就是连接河的两边，而我们的桥接模式与现实中的情况很相似，也是承担着连接“两边”的作用。

桥接模式的定义
    将抽象部分与实现部分分离，使它们可以独立地进行变化。

桥接模式的使用场景
    从模式的定义中我们大致可以了解到，这里的“桥梁”的作用其实就是连接“抽象部分”与“实现部分”，但是事实上，任何
多维度变化类或者说多个树状类之间的耦合都可以使用桥接模式来实现解耦。
    如果一个系统需要在构件的抽象化角色和具体化角色之间增加更多的灵活性，避免在两个层次之间建立静态的继承关系，可以
通过桥接模式使它们在抽象层建立一个关联关系。
    对于那些不希望使用继承或因为多层次继承导致系统类的个数急剧增加的系统，也可以考虑使用桥接模式。
    一个类存在两个独立变化的维度，且者两个维度都需要进行扩展。

角色介绍
    Abstraction: 抽象部分。
        该类保持一个对实现部分对象的引用，抽象部分中的方法需要调用实现部分的对象来实现，该类一般为抽象类。

    RefinedAbstraction:优化的抽象部分。
        抽象部分的具体实现，该类一般是对抽象部分的方法进行完善可扩展。

    Implementor：实现部分
        可以为接口或者抽象类，其方法不一定要与抽象部分中一致，一般情况下是由实现部分提供基本的操作，而抽象部分
    定义的规则是基于实现部分这些基本的操作的业务方法。
    ConcreteImplementorA/ConcreteImplementorB: 实现部分的具体实现。完善实现部分中方法定义的具体逻辑。

    Client:客户类，客户端程序。