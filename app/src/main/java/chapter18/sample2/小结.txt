代理模式的简单实现
    代理模式的例子如本文开头所述，你可以在日常生活中找到很多很多。小民以前在公司上班时，就遇到过被老板拖欠工资甚至
克扣工资的情况，这种情况下小民还是通过法律途径来解决问题，一旦小民选择了走上法律途径解决该纠纷，那么不可避免地就需要
请一个律师来作为自己的诉讼代理人，我们将诉讼流程抽在一个接口类中.

    诉讼接口类 - ILawsuit, 4个方法非常简单，都是诉讼的一般流程。
    具体诉讼人 - XiaoMin, 该类实现了ILawsuit并对其中4个方法作出具体的实现逻辑，逻辑很简单，都只是输出一段话而已
，当然，小民自己是不会去打官司的，于是小民请个律师代替自己进行诉讼。
    律师类 - Lawer,表示代理者律师，在该类里面会持有一个被代理者的引用，律师所执行的方法实质就是简单地调用被代理者
中的方法，下面来看看客户类中具体的调用执行关系。
    客户类 - Client, 运行结果很简单这里不再给出，大家可以看到，其实代理模式也很简单，其主要还是一种委托机制，真实
对象将方法的执行委托给代理对象，而且委托得干净利落毫不做作，这也是为什么代理模式称为委托模式的原因。


    动态代理通过一个代理类来代理N多个被代理类，其实质是对代理者与被代理者进行解耦，使两者之间没有直接的耦合关系。
相对而言静态代理则只能为给定的接口下的实现类做代理，如果接口不同那么就需要重新定义不同代理类，较为复杂，但是静态
代理更符合面向对象原则。在开发时具体使用哪种方式来实现代理，就看自己的偏好了。