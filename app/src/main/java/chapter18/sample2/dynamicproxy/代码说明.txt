    代理模式可以分为两大部分，一是静态代理，二是动态代理。 静态代理如上述示例那样，代理者的代码(Lawyer)由程序员
自己或通过一些自动化工具生成固定的代码再对其进行编译，也就是说在我们的代码运行前代理类的class编译文件就已存在；
而动态代理则与静态代理相反，通过反射机制动态地生成代理者的对象，也就是我们在code阶段压根就不需要知道谁代理谁，
代理谁我们将在执行阶段决定。而Java也给我们提供了一个便捷的动态代理接口InvocationHandler，实现该接口需要重写
其调用方法invoke.

